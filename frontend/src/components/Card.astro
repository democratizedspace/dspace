---
import Editable from './Editable.astro';

export interface Props {
	title: string;
	body: string;
	href: string;
	textbox: boolean;
	disabled: boolean;
	hazard: boolean;
	image: string;
	duration: string;
}

const { href, title, body, textbox, disabled, image, duration } = Astro.props as Props;
---

{
// TODO: make this a Disableable and do a ternary on hazard instead
disabled 
	?
		<div>
		<li class="link-card disabled">
			<span>
				<Editable  title="" href="" body="" editable={false} />
				<img src={image} class="img" />
				<h2>
					{title}
				</h2>
				<p>
					{body}
				</p>
				{duration && <p class="duration">Duration: {duration}</p>}
				<slot />
			</span>
		</li>
		</div>
	:
		<div>
		<li class="link-card">
			<a href={href}>
				<Editable  title="" href="" body="" editable={false} />
				<img src={image} class="img" />
				<h2>
					{title}
				</h2>
				<p>
					{body}
				</p>
				{duration && <p class="duration">Duration: {duration}</p>}
				<slot />
			</a>
		</li>
		</div>
}

<style>
	:root {
		--link-gradient: linear-gradient(45deg, #003a03, #003a03 30%, var(--color-border) 60%);
		border-color: red;
	}

	.img {
		width: 100%;
	}

	.link-card {
		list-style: none;
		display: flex;
		padding: 0.15rem;
		background-image: var(--link-gradient);
		background-size: 400%;
		border-radius: 0.5rem;
		border:none;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		border-color: red;
	}

	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: 1em 1.3em;
		border-radius: 0.35rem;
		color: var(--text-color);
		background-color: #003a03;
		opacity: 0.8;
		border-color: red;
	}

	h2 {
		margin: 0;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		border-color: red;
		font-size: 1rem;
	}

	p {
		margin-top: 0.75rem;
		margin-bottom: 0;
		border-color: red;
	}

	h2 span {
		display: inline-block;
		transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
		border-color: red;
	}

	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		border-color: red;
	}

	.link-card:is(:hover, :focus-within) h2 {
		color: #00ff22;
		border-color: red;
	}

	.link-card:is(:hover, :focus-within) h2 span {
		will-change: transform;
		transform: translateX(5);
		border-color: red;
	}

	span {
		color: rgb(116, 161, 175);
		font-family: ui-monospace;
		font-size: large;
		border-color: red;
	}

	.disabled {
		border-color: red;
	}
	
	.textbox {
		background-color: #7d9b7e;
		border-color: #997529;
		border-radius: 0.35rem;
		padding: 0.1em 0.1em;
		color: red);
		opacity: 1;
		border-color: red;
	}

	span {
	    width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: 1em 1.3em;
		border-radius: 0.35rem;
		color: var(--text-color);
		background-color: #003a03;
		opacity: 0.8;
		border-color: red;
	}

	.hazard {
		background-color: red;
	}
</style>
