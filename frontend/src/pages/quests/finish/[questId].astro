---
import Page from '../../../components/Page.astro';
import Chip from '../../../components/Chip.astro';
import ItemCount from '../../../components/ItemCount.astro';
import SuggestCookies from '../../../components/SuggestCookies.astro';
import items from '../../inventory/json/items.json';
import quests from '../json/quests.json';
import { hasAcceptedCookies, setCookieValue, getCookie } from '../../../utils';
import { addItemToInventory, burnItem } from '../../inventory/utils';

export interface Props {
    questId: string;
}

const { questId } = Astro.params;
let questData = {}, questFinished = false;

questFinished = getCookie(Astro.request, `quest-${questId}-finished`) || false;

const shouldAcceptCookies = !hasAcceptedCookies(Astro.request);

// find the quest with id questId
const quest = quests.find((quest) => quest.id === questId);

if (quest && !questFinished) {
    questData = {
        id: quest.id,
        image: quest.image,
        rewards: quest.rewards.map((reward) => {
            const item = items.find((item) => item.id === reward.id);

            addItemToInventory(Astro.request, Astro.response, reward.id, reward.count);

            return {
                id: reward.id,
                name: item.name,
                count: reward.count,
            };
        }),
        burns: quest.burnsItems ? quest.burnsItems.map((burn) => {
            const item = items.find((item) => item.id === burn.id);

            burnItem(Astro.request, Astro.response, burn.id);            

            return {
                id: burn.id,
                name: item.name,
                count: burn.count,
            };
        }) : []
    };

    if (!(shouldAcceptCookies)) {
        setCookieValue(Astro.response, `quest-${questId}-finished`, new Date(Date.now()));
    } else {
    }
}

---

<Page columns="1">
    <div class="parent">
        {shouldAcceptCookies ? (
            questFinished ?
                <p>Quest already finished.</p>
            :
                <SuggestCookies shouldSuggestCookies={shouldAcceptCookies} redirect={Astro.url.pathname} />
        ) : (
            questFinished ? (
                <p>Quest already finished.</p>
            ) :
                questData['image'] && <img src={questData['image']} />
                <p>Done! You finished the quest!</p>

                <p>{questData['burns'].length > 0 && "The following items have been consumed:"}</p>
                <div class="horizontal">
                    {questData && questData['burns'].map((burn) => (
                        <Chip
                            text={`${burn.name} x ${burn.count}`}
                        />
                    ))}
                </div>

                <p>The following items have been added to your inventory:</p>
                <ItemCount itemList={questData['rewards']} />
        )}
    </div>
</Page>

<style>
    .parent {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin: 0 auto;
    }

    img {
        width: 200px;
        border-radius: 20px;
    }

    p {
        margin: 20px;
        min-width: 130px;
    }
    
    .vertical {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
    }
</style>