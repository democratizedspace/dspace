---
import Page from '../../components/Page.astro';

import items from '../inventory/json/items.json';
import processes from '../processes/processes.json';

const machines = items.filter(item => item.type === 'machine');

// create a map from machine ID to list of processes that reference that machine
const machineProcesses = new Map();
processes.forEach(process => {
    if (process.machine) {
        if (!machineProcesses.has(process.machine)) {
            machineProcesses.set(process.machine, []);
        }
        machineProcesses.get(process.machine).push(process);
    }
});

console.log(machineProcesses);
---

<Page title="Machines" columns="1">
    <div class="vertical">
        {machines.map(machine => {
            return (
                <div>
                    <div class="header">
                        <img src={machine.image} />
                        <p>{machine.name}</p>
                    </div>
                    <div class="processes">
                        {
                            machineProcesses.has(machine.id) ?
                                machineProcesses.get(machine.id).map(process => {
                                    return (
                                        <div>
                                            <a href={`/processes/${process.id}`}>
                                                {process.title}
                                            </a>
                                        </div>
                                    );
                                }) :
                                <p>No processes</p>
                        }
                    </div>
                </div>
            );
        })}
    </div>
</Page>

<style>
    img {
        /* 50px width and height and fill the entire vertical part of the container */
        width: 75px;
        height: 75px;
        object-fit: cover;
        border-top-left-radius: 20px;
        border-bottom-left-radius: 20px;
    }

    .vertical {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    .header {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 1rem;
        /* horizontal linear gradient of red and blue */
        background: linear-gradient(90deg, #007006, #24232a);
        border-top-left-radius: 20px;
        border-bottom-left-radius: 20px;
    }

    .processes {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        padding: 1rem;
        background: #24232a;
        border-top-right-radius: 20px;
        border-bottom-right-radius: 20px;
        width: 100%;
    }

    .processes a {
        color: white;
        /* make it look like the menu chips */
        border-radius: 20px;
        padding: 0.5rem;
        text-decoration: none;
        background: #007006;
    }
</style>